@using WinInvestmentTracker.Models
@using WinInvestmentTracker.Models.BOLO
@model WinInvestmentTracker.Models.Investment

@{
    ViewBag.Title = "Details";
}

<div>
    <h1><a id="@Html.NameFor(model => model.Name)" data-pk="@Model.ID" data-title="Enter data" data-url="@Url.Action("Update","Investment", new { ID = @Model.ID})">@Model.Name</a></h1>    
    <h4>Investment</h4>    
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Description)
        </dt>

        <dd>
            <!-- @Html.DisplayFor(model => model.Description) -->
            <a id="Description" data-pk="@Model.ID" data-title="Enter data" data-type="textarea" data-url="@Url.Action("Update","Investment", new { ID = @Model.ID})">@Model.Description</a>
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Symbol)
        </dt>

        <dd>
            <a id="@Html.NameFor(model => model.Symbol)" data-pk="@Model.ID" data-title="Enter data" data-url="@Url.Action("Update","Investment", new { ID = @Model.ID})">@Model.Symbol</a>
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.ValueProposition)
        </dt>

        <dd>
            <a id="@Html.NameFor(model => model.ValueProposition)" data-pk="@Model.ID" data-type="textarea" data-title="Enter data" data-url="@Url.Action("Update","Investment", new { ID = @Model.ID})">@Model.ValueProposition</a>            
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.DesirabilityStatement)
        </dt>

        <dd>
            <a id="@Html.NameFor(model => model.DesirabilityStatement)" data-pk="@Model.ID" data-type="textarea" data-title="Enter data" data-url="@Url.Action("Update","Investment", new { ID = @Model.ID})">@Model.DesirabilityStatement</a>            
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.InitialInvestment)
        </dt>

        <dd>
            <a id="@Html.NameFor(model => model.InitialInvestment)" data-pk="@Model.ID" data-title="Enter data" data-url="@Url.Action("Update","Investment", new { ID = @Model.ID})">@Model.InitialInvestment</a>            
        </dd>
                
        <dt>
            @Html.DisplayNameFor(model => model.Value)
        </dt>

        <dd>
            <a id="@Html.NameFor(model => model.Value)" data-pk="@Model.ID" data-title="Enter data" data-url="@Url.Action("Update","Investment", new { ID = @Model.ID})">@Model.Value</a>            
        </dd>

    </dl>
</div>

@{ Html.RenderPartial("_ListRisks", new ParentChildEntityWithHtmlActions<InvestmentRisk, Investment> {
        Children = Model.Risks.ToList(),
        Parent = Model,
        HtmlActions = new List<HtmlAction>()
        {
            new HtmlAction("","Dissassociate","DissassociateRisk","Investment"),
            
        }
    } ); 
}
<p>
    @Html.ActionLink("Add a risk to this investment", "AssociateRisk", "Investment", new { ID = Model.ID}, new { @class = "btn btn-primary" })
</p>
@{ Html.RenderPartial("_ListFactors", new ParentChildEntityWithHtmlActions<InvestmentInfluenceFactor, Investment>
   {
       Children = Model.Factors.ToList(),
       Parent = Model,
       HtmlActions = new List<HtmlAction>()
       {
           new HtmlAction("", "Dissassociate", "DissassociateFactor", "Investment"),

       }
   }); 
}
<p>
    @Html.ActionLink("Add a factor to this investment", "AssociateFactor", "Investment", new { ID = Model.ID}, new { @class = "btn btn-primary" })
</p>

@{ Html.RenderPartial("_ListGroups", new ParentChildEntityWithHtmlActions<InvestmentGroup, Investment>
    {
        Children = Model.Groups.ToList(),
        Parent = Model,
        HtmlActions = new List<HtmlAction>()
       {
           new HtmlAction("","Dissassociate","DissassociateGroup","Investment"),

       }
    });
}
<p>
    @Html.ActionLink("Add this investment to a group", "AssociateGroup", "Investment", new { ID = Model.ID }, new { @class = "btn btn-primary" })
</p>
@{ Html.RenderPartial("_ListRegions", new ParentChildEntityWithHtmlActions<Region, Investment>
   {
       Children = Model.Regions.ToList(),
       Parent = Model,
       HtmlActions = new List<HtmlAction>()
       {
           new HtmlAction("","Dissassociate","DissassociateRegion","Investment"),

       }
   });
}
<p>
    @Html.ActionLink("Add this investment to a region", "AssociateRegion", "Investment", new { ID = Model.ID }, new { @class = "btn btn-primary" })
</p>



@section Scripts {
    <script type="text/javascript">
        $(document).ready(function () {
            $.fn.editable.defaults.mode = 'inline';
            $('#@Html.NameFor(model => model.Name)').editable();
            $('#@Html.NameFor(model => model.Description)').editable();
            $('#@Html.NameFor(model => model.ValueProposition)').editable();
            $('#@Html.NameFor(model => model.Symbol)').editable();
            $('#@Html.NameFor(model => model.DesirabilityStatement)').editable();
            $('#@Html.NameFor(model => model.Value)').editable();
            $('#@Html.NameFor(model => model.InitialInvestment)').editable();
        });
    </script>
}

